---
interface Props {
  title: string
  body: string
  href: string
}

const { href, title, body } = Astro.props
---

<div class="bg-blue10 pt-5 pl-6 rounded-lg relative">
  <div class="bg-blue10 rounded-full absolute p-3 flex items-center justify-center top-0 left-0">
    <img src="/flames/orange.svg" alt="flames" width="32" height="32" />
  </div>
  <article class="bg-blue20 rounded-lg py-8 px-11 shadow-lg">
    <h2 class="font-jost font-semibold text-lg text-text10">Notes</h2>
    <p class="font-jost text-base mt-3 text-text10">
      During my review, I take notes detailing actionable steps you can take to improve, as well as any valuable
      thoughts I have during my time with your project.
    </p>
  </article>
</div>

<section class="mt-10 grid grid-cols-2 gap-12">
  <div
    class="py-9 px-10 rounded-md bg-blue20"
    style="box-shadow: 4px 4px 44px 0px rgba(0, 0, 0, 0.25), 3px 3px 13px 0px rgba(0, 0, 0, 0.20), -1px -1px 0px 0px rgba(130, 242, 249, 0.15);">
    <h3>Code splitting & lazy loading a server side rendered React app</h3>
    <p>
      Reasoning, approach, and goals Goals Faster initial load times. Users only download the code they need for the
      features they are using. Thisâ€¦
    </p>
  </div>
  <div></div>
</section>

<style>
  .link-card {
    list-style: none;
    display: flex;
    padding: 1px;
    background-color: #23262d;
    background-image: none;
    background-size: 400%;
    border-radius: 7px;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: calc(1.5rem - 1px);
    border-radius: 8px;
    color: white;
    background-color: #23262d;
    opacity: 0.8;
  }
  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent-light));
  }
</style>
